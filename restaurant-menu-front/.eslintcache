[{"C:\\xampp\\htdocs\\Laboratorio\\django\\DjangoReactCRUDgitHub\\restaurant-menu-front\\src\\index.js":"1","C:\\xampp\\htdocs\\Laboratorio\\django\\DjangoReactCRUDgitHub\\restaurant-menu-front\\src\\App.js":"2","C:\\xampp\\htdocs\\Laboratorio\\django\\DjangoReactCRUDgitHub\\restaurant-menu-front\\src\\components\\MenuList.js":"3","C:\\xampp\\htdocs\\Laboratorio\\django\\DjangoReactCRUDgitHub\\restaurant-menu-front\\src\\components\\AddMenu.js":"4","C:\\xampp\\htdocs\\Laboratorio\\django\\DjangoReactCRUDgitHub\\restaurant-menu-front\\src\\components\\UpdateMenu.js":"5","C:\\xampp\\htdocs\\Laboratorio\\django\\DjangoReactCRUDgitHub\\restaurant-menu-front\\src\\services\\menu.service.js":"6"},{"size":264,"mtime":1635537848035,"results":"7","hashOfConfig":"8"},{"size":1018,"mtime":1635890494104,"results":"9","hashOfConfig":"8"},{"size":2963,"mtime":1635971944080,"results":"10","hashOfConfig":"8"},{"size":3020,"mtime":1635970341290,"results":"11","hashOfConfig":"8"},{"size":3763,"mtime":1635970027927,"results":"12","hashOfConfig":"8"},{"size":118,"mtime":1635775985659,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1ah394e",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\xampp\\htdocs\\Laboratorio\\django\\DjangoReactCRUDgitHub\\restaurant-menu-front\\src\\index.js",[],["29","30"],"C:\\xampp\\htdocs\\Laboratorio\\django\\DjangoReactCRUDgitHub\\restaurant-menu-front\\src\\App.js",[],"C:\\xampp\\htdocs\\Laboratorio\\django\\DjangoReactCRUDgitHub\\restaurant-menu-front\\src\\components\\MenuList.js",["31"],"import axios from \"axios\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { baseURL, headers } from \"./../services/menu.service\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const MenuList = () => {\n  const [menus, setMenus] = useState([]);\n  const history = useHistory();\n  const countRef = useRef(0);\n\n  const [deleted, setDeleted] = useState(false);\n\n  useEffect(() => {\n    retrieveAllMenusOld();\n  }, [countRef]);\n\n\n  const retrieveAllMenus = () => {\n     axios\n      .get(`${baseURL}/menu/`, {\n          header: headers\n      })\n      .then((response) => {\n          setMenus(response.data);\n      })\n      .catch((err) => {\n           console.error(\"ops! ocorreu um erro\" + err);\n      });\n  }\n\n\n  const retrieveAllMenusOld = () => {\n    axios\n      .get(`${baseURL}/menu/`, {\n        headers: headers \n      })\n      .then((response) => {\n        setMenus(response.data);\n        console.log(menus);\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  };\n\n  const deleteMenu = (id) => {\n    axios\n      .delete(`${baseURL}/menu/${id}/`, {\n        headers: headers\n      })\n      .then((response) => {\n        setDeleted(true);\n        retrieveAllMenus();\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  };\n\n  const handleUpdateClick = (id) => {\n    history.push(`/menu/${id}/update/`);\n  };\n  return (\n    <div className=\"row justify-content-center\">\n      <div className=\"col\">\n        {deleted && (\n          <div\n            className=\"alert alert-danger alert-dismissible fade show\"\n            role=\"alert\"\n          >\n            Menu deleted!\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"alert\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n        )}\n\n        {menus &&\n          menus.map((menu, index) => (\n            <div className=\"card my-4 w-90 mx-auto\">\n              <div className=\"card-body\">\n                <h2 className=\"card-title font-weight-bold\">{menu.name}</h2>\n                <h4 className=\"card-subtitle mb-2\">{menu.price}</h4>\n                <p className=\"card-text\">{menu.description}</p>\n              </div>\n              <center classNameName=\"card-footer\">              \n                <div className=\"btn-group justify-content-around w-70 mb-4\" data-toggle=\"buttons\">\n                  <span>\n                    <button  className=\"btn btn-info\" onClick={() => handleUpdateClick(menu.id)}>\n                      Update\n                    </button>\n                  </span>\n                  <span>\n                    <button className=\"btn btn-danger\" onClick={() => deleteMenu(menu.id)}>\n                      Delete\n                    </button>\n                  </span>\n                </div>\n              </center>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\n","C:\\xampp\\htdocs\\Laboratorio\\django\\DjangoReactCRUDgitHub\\restaurant-menu-front\\src\\components\\AddMenu.js",[],"C:\\xampp\\htdocs\\Laboratorio\\django\\DjangoReactCRUDgitHub\\restaurant-menu-front\\src\\components\\UpdateMenu.js",["32"],"import axios from \"axios\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { baseURL, headers } from \"./../services/menu.service\";\n\nexport const UpdateMenu = () => {\n  const initialMenuState = {\n    id: null,\n    name: \"\",\n    description: \"\",\n    price: 0,\n  };\n\n  let { id } = useParams();\n\n  const [currentMenu, setCurrentMenu] = useState(initialMenuState);\n  const [submitted, setSubmitted] = useState(false);\n  const countRef = useRef(0);\n\n  useEffect(() => {\n    retrieveMenu();\n  }, [countRef]);\n\n  const handleMenuChange = (e) => {\n    const { name, value } = e.target;\n    setCurrentMenu({ ...currentMenu, [name]: value });\n  };\n\n  const retrieveMenu = () => {\n    axios\n      .get(`${baseURL}/menu/${id}/`, {\n        headers: headers\n      })\n      .then((response) => {\n        setCurrentMenu({\n          id: response.data.id,\n          name: response.data.name,\n          description: response.data.description,\n          price: response.data.price,\n        });\n        console.log(currentMenu);\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  };\n\n  const updateMenu = () => {\n    let data = {\n      name: currentMenu.name,\n      description: currentMenu.description,\n      price: currentMenu.price,\n    };\n\n    axios\n      .put(`${baseURL}/menu/${id}/`, data, {\n        headers: headers\n      })\n      .then((response) => {\n        setCurrentMenu({\n          id: response.data.id,\n          name: response.data.name,\n          description: response.data.description,\n          price: response.data.price,\n        });\n        setSubmitted(true);\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  };\n\n  const newMenu = () => {\n    setCurrentMenu(initialMenuState);\n    setSubmitted(false);\n  };\n\n  return (\n    <div className=\"submit-form\">\n      {submitted ? (\n        <div>\n          <div\n            className=\"alert alert-success alert-dismissible fade show\"\n            role=\"alert\"\n          >\n            Menu Updated!\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"alert\"\n              aria-label=\"Close\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <button className=\"btn btn-success\" onClick={newMenu}>\n            Update\n          </button>\n        </div>\n      ) : (\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"name\"\n              required\n              value={currentMenu.name}\n              onChange={handleMenuChange}\n              name=\"name\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Description</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"description\"\n              required\n              value={currentMenu.description}\n              onChange={handleMenuChange}\n              name=\"description\"\n              default\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"price\">Price</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"price\"\n              required\n              value={currentMenu.price}\n              onChange={handleMenuChange}\n              name=\"price\"\n            />\n          </div>\n\n          <button onClick={updateMenu} className=\"btn btn-success\">\n            Submit\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n","C:\\xampp\\htdocs\\Laboratorio\\django\\DjangoReactCRUDgitHub\\restaurant-menu-front\\src\\services\\menu.service.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":15,"column":6,"nodeType":"39","endLine":15,"endColumn":16,"suggestions":"40"},{"ruleId":"37","severity":1,"message":"41","line":22,"column":6,"nodeType":"39","endLine":22,"endColumn":16,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'retrieveAllMenusOld'. Either include it or remove the dependency array.","ArrayExpression",["45"],"React Hook useEffect has a missing dependency: 'retrieveMenu'. Either include it or remove the dependency array.",["46"],"no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},{"desc":"49","fix":"50"},"Update the dependencies array to be: [countRef, retrieveAllMenusOld]",{"range":"51","text":"52"},"Update the dependencies array to be: [countRef, retrieveMenu]",{"range":"53","text":"54"},[437,447],"[countRef, retrieveAllMenusOld]",[555,565],"[countRef, retrieveMenu]"]